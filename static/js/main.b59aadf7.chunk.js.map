{"version":3,"sources":["components/About/About.js","components/TrackerDisplay/TrackerDisplay.js","components/TrackerHistory/TrackerHistory.js","components/TrackerAddTransaction/TrackerAddTransaction.js","components/Tracker/Tracker.js","App.js","serviceWorker.js","index.js"],"names":["About","TrackerDisplay","balance","income","expenseAmount","incomeDate","className","id","title","TrackerHistory","props","expense","handleDeleteHistoryItem","removeTransaction","e","historyItemAmount","$","target","attr","historyItemIndex","Number","name","length","map","item","i","key","amount","onClick","TrackerAddTransaction","useState","transactionType","setTransactionType","incomeAmount","form","setForm","handleFormChange","value","options","label","onChange","views","view","hide","fadeIn","data-transaction-view","type","placeholder","preventDefault","handleIncome","Swal","fire","text","icon","handleExpense","Tracker","setIncome","setIncomeDate","setExpense","setBalance","reduce","totalExpense","currentExpense","tempExpensesList","splice","Date","toLocaleDateString","expenseName","App","basename","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b59aadf7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            About\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function TrackerDisplay({balance, income, expenseAmount, incomeDate}) {\r\n    return (\r\n        <div className=\"tracker-display\">\r\n            <div className=\"tracker__display-title\">\r\n                <h4>Your Balance</h4>\r\n                <h1 id=\"balance\">${balance}</h1>\r\n            </div>\r\n\r\n            <div className=\"tracker__display\">\r\n                <div className=\"tracker__display-item\">\r\n                    <span className=\"tracker__display-item-title\">Income <span className=\"tooltip\" title={'Last entry: ' + incomeDate}><span>?</span></span></span>\r\n                    <p id=\"money-plus\" className=\"color-green\">${income}</p>\r\n                </div>\r\n                <div className=\"tracker__display-item\">\r\n                    <span className=\"tracker__display-item-title\">Expense</span>\r\n                    <p id=\"money-minus\" className=\"color-red\">${expenseAmount}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport $ from 'jquery';\r\nexport default function TrackerHistory(props) {\r\n    const {expense, handleDeleteHistoryItem} = props;\r\n\r\n    function removeTransaction(e) {\r\n        let historyItemAmount = $(e.target).attr('amount');\r\n        let historyItemIndex = Number(e.target.name);\r\n        handleDeleteHistoryItem(Number(historyItemAmount), historyItemIndex);\r\n    }\r\n    return (\r\n        <div className=\"tracker-history\">\r\n            <h3 className=\"tracker-history__title\">History</h3>\r\n            <ul id=\"tracker-history\" className=\"tracker-history__list\">\r\n                {   expense.length > 0 ?\r\n                    expense.map((item, i) => (\r\n                        <li key={i} className=\"tracker-history__list-item icon-plus\">\r\n                            <div className=\"tracker-history__list-item-text\">\r\n                                {item[0]} <span>+{item[1]}$</span>\r\n                            </div>\r\n                            <button className=\"tracker-history__list-item-btn btn-delete\" name={i} amount={item[1]} title=\"Remove\" onClick={removeTransaction}>x</button>\r\n                        </li>\r\n                    ))\r\n                    : []\r\n                }\r\n                \r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport $ from 'jquery';\r\nimport Swal from 'sweetalert2'\r\nimport Select from 'react-select';\r\n\r\nexport default function TrackerAddTransaction(props) {\r\n    const [transactionType, setTransactionType] = useState('');\r\n    const [form, setForm] = useState({\r\n        incomeAmount: 0,\r\n        expense: \"\",\r\n        expenseAmount: 0\r\n    });\r\n\r\n    const handleFormChange = (e) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    \r\n    const options = [\r\n        { value: 'expense', label: 'Add Expense' },\r\n        { value: 'income', label: 'Add Income' },\r\n    ];\r\n    \r\n    function changeTransactionView(e) {\r\n        let views = $('[data-transaction-view]');\r\n        for (let view of views) {\r\n            $(view).hide();\r\n            setTransactionType(e.value);\r\n        }\r\n        $(`[data-transaction-view=\"${e.value}\"]`).fadeIn();\r\n    }\r\n    function restartState() {\r\n        setForm({\r\n            incomeAmount: 0,\r\n            expense: \"\",\r\n            expenseAmount: 0\r\n        });\r\n    }\r\n    function handleTransaction(e) {\r\n        e.preventDefault();\r\n        let { incomeAmount, expense, expenseAmount } = form;\r\n        switch (transactionType) {\r\n            case 'income' :\r\n                incomeAmount !== 0 ? \r\n                    props.handleIncome(incomeAmount) \r\n                : Swal.fire({\r\n                    title: 'Error!',\r\n                    text: 'Ammount can\\'t be 0',\r\n                    icon: 'error',\r\n                });\r\n                break;\r\n            case 'expense' :\r\n                expense !== '' || expenseAmount !== 0 ? \r\n                props.handleExpense(expense, expenseAmount)\r\n                : Swal.fire({\r\n                    title: 'Error!',\r\n                    text: 'Please fill all fields',\r\n                    icon: 'error',\r\n                });\r\n                break;\r\n            default: \r\n                Swal.fire({\r\n                    title: 'Error!',\r\n                    text: 'Please fill all fields',\r\n                    icon: 'error',\r\n                });\r\n                break;\r\n        }\r\n        restartState();\r\n    }\r\n\r\n    return (\r\n        <div className=\"tracker-add-trans\">\r\n            <h3>Add new transaction</h3>\r\n            <form id=\"form\" className=\"form tracker-add-trans__form\">\r\n                <Select\r\n                    options={options}\r\n                    className=\"form-select\"\r\n                    onChange={changeTransactionView}\r\n                />\r\n                <div className=\"form-control tracker-add-trans__form-item\" data-transaction-view=\"expense\">\r\n                    <span>Text</span>\r\n                    <input \r\n                        type=\"text\"\r\n                        name=\"expense\"\r\n                        value={form.expense}\r\n                        onChange={handleFormChange}\r\n                        placeholder=\"Enter text...\"\r\n                    />\r\n                    <span>Amount</span>\r\n                    <input \r\n                        type=\"number\"\r\n                        name=\"expenseAmount\"\r\n                        value={form.expenseAmount}\r\n                        onChange={handleFormChange}\r\n                        placeholder=\"Enter Amount...\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-control tracker-add-trans__form-item\" data-transaction-view=\"income\">\r\n                    <span>Amount</span>\r\n                    <input \r\n                        type=\"number\" \r\n                        name=\"incomeAmount\" \r\n                        value={form.incomeAmount} \r\n                        onChange={handleFormChange} \r\n                        placeholder=\"Enter amount...\" \r\n                    />\r\n                </div>\r\n                <button className=\"btn\" onClick={handleTransaction}>Add transaction</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport './tracker.scss';\r\n\r\nimport TrackerDisplay from '../TrackerDisplay/TrackerDisplay';\r\nimport TrackerHistory from '../TrackerHistory/TrackerHistory';\r\nimport TrackerAddTransaction from '../TrackerAddTransaction/TrackerAddTransaction';\r\n\r\nexport default function Tracker() {\r\n    const [income, setIncome] = useState(0);\r\n    const [incomeDate, setIncomeDate] = useState('');\r\n    const [expense, setExpense] = useState([]);\r\n    const [balance, setBalance] = useState(0);\r\n   \r\n   \r\n    const handleIncome = (value) => {\r\n        setIncome(Number(income) + Number(value));\r\n        setIncomeDate(new Date().toLocaleDateString());\r\n        setBalance(balance + Number(value));\r\n    }\r\n\r\n    const handleExpense = (expenseName, expenseAmount) => {\r\n        setExpense([\r\n            ...expense,\r\n            [expenseName, expenseAmount]\r\n        ]);\r\n        setBalance(balance - Number(expenseAmount));\r\n    }\r\n\r\n    const calculateExpenseAmount = () => {\r\n        return expense.reduce((totalExpense, currentExpense) => {\r\n            return Number(totalExpense) + Number(currentExpense[1]);\r\n        }, 0);\r\n    }\r\n    const handleDeleteHistoryItem = (historyItemAmount, historyItemIndex) => {\r\n        let tempExpensesList = [... expense];\r\n        if (historyItemIndex !== -1) {\r\n            tempExpensesList.splice(historyItemIndex, 1);\r\n            setExpense(tempExpensesList);\r\n            setBalance(balance + historyItemAmount);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"tracker\">\r\n            <TrackerDisplay \r\n                balance={balance}\r\n                income={income}\r\n                incomeDate={incomeDate}\r\n                expenseAmount={calculateExpenseAmount()}\r\n            />\r\n\r\n            <TrackerHistory \r\n                expense={expense}\r\n                handleDeleteHistoryItem={handleDeleteHistoryItem}\r\n            />\r\n            \r\n            <TrackerAddTransaction \r\n                income={income}\r\n                handleIncome={handleIncome}\r\n                handleExpense={handleExpense}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport './scss/main.scss';\n\nimport About from './components/About/About';\nimport Tracker from './components/Tracker/Tracker';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"container-fluid\">\n\t\t\t<Router basename=\"finance-tracker\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t<nav className=\"navigation\">\n\t\t\t\t\t\t\t<Link to=\"/\" className=\"navigation__link\">Home</Link>\n\t\t\t\t\t\t\t<Link to=\"/about\" className=\"navigation__link\">About</Link>\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Tracker}></Route>\n\t\t\t\t\t<Route path=\"/about\" component={About}></Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\t\nexport default App;\n\t","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}