{"version":3,"sources":["components/About/About.js","components/TrackerDisplay/TrackerDisplay.js","components/TrackerHistory/TrackerHistory.js","components/TrackerAddTransaction/TrackerAddTransaction.js","components/TrackerSummary/TrackerSummary.js","components/Tracker/Tracker.js","App.js","serviceWorker.js","index.js"],"names":["About","TrackerDisplay","balance","income","expenseAmount","incomeDate","className","id","title","TrackerHistory","props","expense","handleDeleteHistoryItem","removeTransaction","e","historyItemAmount","$","target","attr","historyItemIndex","Number","name","length","map","item","i","key","amount","onClick","TrackerAddTransaction","useState","transactionType","setTransactionType","incomeAmount","expenseType","form","setForm","handleFormChange","value","options","label","onChange","views","view","hide","fadeIn","data-transaction-view","type","placeholder","incomeRemove","preventDefault","handleIncome","Swal","fire","text","icon","handleExpense","handleIncomeRemove","updateDB","TrackerSummary","summary","totalExpenses","width","height","data","margins","left","strokeDasharray","dataKey","fill","apiURL","Tracker","setIncome","setIncomeDate","setExpense","setSummary","setBalance","setExpenseAmount","useEffect","a","axios","result","results","income_date","fetchData","expenseTypes","val","arr","expenseSingleType","res","j","console","log","_","uniqWith","isEqual","calculateExpenseAmount","reduce","totalExpense","currentExpense","tempExpensesList","splice","Date","toLocaleDateString","expenseName","toLowerCase","put","_id","headers","catch","error","App","basename","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3db7dee7.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            About\n        </div>\n    )\n}\n","import React from 'react';\n\nexport default function TrackerDisplay({balance, income, expenseAmount, incomeDate}) {\n    return (\n        <div className=\"tracker-display\">\n            <div className=\"tracker__display-title\">\n                <h4 className=\"tracker__display-title-text\">Your Balance:</h4>\n                <h1 className=\"tracker__display-title-number\" id=\"balance\">${balance}</h1>\n            </div>\n\n            <div className=\"tracker__display\">\n                <div className=\"tracker__display-item\">\n                    <span className=\"tracker__display-item-title\">Income <span className=\"tooltip\" title={'Last entry: ' + incomeDate}><span>?</span></span></span>\n                    <p id=\"money-plus\" className=\"color-green\">${income}</p>\n                </div>\n                <div className=\"tracker__display-item\">\n                    <span className=\"tracker__display-item-title\">Expense</span>\n                    <p id=\"money-minus\" className=\"color-red\">${expenseAmount}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport $ from 'jquery';\nexport default function TrackerHistory(props) {\n    const {expense, handleDeleteHistoryItem} = props;\n\n    function removeTransaction(e) {\n        let historyItemAmount = $(e.target).attr('amount');\n        let historyItemIndex = Number(e.target.name);\n        handleDeleteHistoryItem(Number(historyItemAmount), historyItemIndex);\n    }\n    return (\n        <div className=\"tracker-history\">\n            <h3 className=\"tracker-history__title\">History</h3>\n            <ul id=\"tracker-history\" className=\"tracker-history__list\">\n                {   expense.length > 0 ?\n                    expense.map((item, i) => (\n                        <li key={i} className=\"tracker-history__list-item icon-plus\">\n                            <div className=\"tracker-history__list-item-text\">\n                                {item[0]} <span>+{item[1]}$</span>\n                            </div>\n                            <button className=\"tracker-history__list-item-btn btn-delete\" name={i} amount={item[1]} title=\"Remove\" onClick={removeTransaction}>x</button>\n                        </li>\n                    ))\n                    : <span className=\"centered\">No data... <br /> Add your expense to track history</span>\n                }\n                \n            </ul>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport $ from 'jquery';\nimport Swal from 'sweetalert2'\nimport Select from 'react-select';\n\n\nexport default function TrackerAddTransaction(props) {\n    const [transactionType, setTransactionType] = useState('');\n    const [form, setForm] = useState({\n        incomeAmount: 0,\n        expense: '',\n        expenseAmount: 0,\n        expenseType: '',\n    });\n    \n    const handleFormChange = (e) => {\n        setForm({\n            ...form,\n            [e.target.name]: e.target.value\n        });\n    };\n    \n    const options = [\n        { value: 'expense', label: 'Add Expense' },\n        { value: 'income', label: 'Add Income' },\n        { value: 'incomeRemove', label: 'Remove Income'}\n    ];\n    \n    function changeTransactionView(e) {\n        let views = $('[data-transaction-view]');\n        for (let view of views) {\n            $(view).hide();\n            setTransactionType(e.value);\n        }\n        $(`[data-transaction-view=\"${e.value}\"]`).fadeIn();\n    }\n    function restartState() {\n        setForm({\n            incomeAmount: 0,\n            expense: '',\n            expenseAmount: 0,\n            expenseType: '',\n        });\n    }\n    function handleTransaction(e) {\n        e.preventDefault();\n        let { incomeAmount, incomeRemove, expense, expenseAmount, expenseType } = form;\n        switch (transactionType) {\n            case 'income' :\n                incomeAmount !== 0 ? \n                    props.handleIncome(incomeAmount) \n                : Swal.fire({\n                    title: 'Error!',\n                    text: 'Amount can\\'t be 0',\n                    icon: 'error',\n                });\n                break;\n            case 'expense' :\n                expense !== '' || expenseAmount !== 0  && typeof expenseAmount != 'string' && expenseType !== '' ?\n                props.handleExpense(expense, expenseAmount, expenseType)\n                : Swal.fire({\n                    title: 'Error!',\n                    text: 'Please fill all fields',\n                    icon: 'error',\n                });\n                break;\n            case 'incomeRemove' :\n                incomeRemove !== '' ?\n                props.handleIncomeRemove(incomeRemove)\n                : Swal.fire({\n                    title: 'Error!',\n                    text: 'Please fill all fields',\n                    icon: 'error',\n                });\n                break;\n            default: \n                Swal.fire({\n                    title: 'Error!',\n                    text: 'Please fill all fields',\n                    icon: 'error',\n                });\n                break;\n        }\n        restartState();\n    }\n\n    return (\n        <div className=\"tracker-add-trans\">\n            <h3>Add new transaction</h3>\n            <form id=\"form\" className=\"form tracker-add-trans__form\">\n                <Select\n                    options={options}\n                    className=\"form-select\"\n                    onChange={changeTransactionView}\n                />\n                <div className=\"form-control tracker-add-trans__form-item\" data-transaction-view=\"expense\">\n                    <span>Text</span>\n                    <input \n                        type=\"text\"\n                        name=\"expense\"\n                        value={form.expense}\n                        onChange={handleFormChange}\n                        placeholder=\"Enter text...\"\n                    />\n                    <span>Amount</span>\n                    <input \n                        type=\"number\"\n                        name=\"expenseAmount\"\n                        value={form.expenseAmount}\n                        onChange={handleFormChange}\n                        placeholder=\"Enter Amount...\"\n                    />\n                    <span>Type</span>\n                    <input \n                        type=\"text\"\n                        name=\"expenseType\"\n                        value={form.expenseType}\n                        onChange={handleFormChange}\n                        placeholder=\"Enter type of expense...\"\n                    />\n                </div>\n                <div className=\"form-control tracker-add-trans__form-item\" data-transaction-view=\"income\">\n                    <span>Amount</span>\n                    <input \n                        type=\"number\"\n                        name=\"incomeAmount\"\n                        value={form.incomeAmount}\n                        onChange={handleFormChange}\n                        placeholder=\"Enter amount...\"\n                    />\n                </div>\n                <div className=\"form-control tracker-add-trans__form-item\" data-transaction-view=\"incomeRemove\">\n                    <span>Amount</span>\n                    <input \n                        type=\"number\" \n                        name=\"incomeRemove\" \n                        value={form.incomeRemove} \n                        onChange={handleFormChange} \n                        placeholder=\"Enter amount...\" \n                    />\n                </div>\n                <div className=\"form-btn-wrap\">\n                    <button className=\"form-btn btn\" onClick={handleTransaction}>Add transaction</button>\n                    <button className=\"form-btn btn btn-green\" onClick={props.updateDB}>Save</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n","import React from 'react';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\nimport './TrackerSummary.scss';\n\nexport default function TrackerSummary({summary, totalExpenses}) {\n    \n    return (\n        <div>\n            <h2 className=\"centered\">Summary:</h2>\n            <BarChart\n                width={300}\n                height={300}\n                data={summary}\n                margins={{left: -40}}\n            >\n                <CartesianGrid strokeDasharray=\"1 1\" />\n                <XAxis dataKey=\"name\" />\n                <YAxis width={40}/>\n                <Tooltip />\n                <Legend />\n                <Bar dataKey=\"amount\" name=\"Money spent\" fill=\"#2196f3 \" label/>\n            </BarChart>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './tracker.scss';\nimport _ from 'lodash';\n\nimport TrackerDisplay from '../TrackerDisplay/TrackerDisplay';\nimport TrackerHistory from '../TrackerHistory/TrackerHistory';\nimport TrackerAddTransaction from '../TrackerAddTransaction/TrackerAddTransaction';\nimport TrackerSummary from '../TrackerSummary/TrackerSummary';\n\n//https://finance-tracker-srv.herokuapp.com/api/finance-account\n//https://moonbyt3-finance-tracker-api.glitch.me/api/finance-account\nconst apiURL = 'https://moonbyt3-finance-tracker-api.glitch.me/api/finance-account';\n\nexport default function Tracker() {\n    const [income, setIncome] = useState(0);\n    const [incomeDate, setIncomeDate] = useState('');\n    const [expense, setExpense] = useState([]);\n    const [summary, setSummary] = useState([]);\n    const [balance, setBalance] = useState(0);\n    const [expenseAmount, setExpenseAmount] = useState(0);\n    \n    useEffect(() => {\n        async function fetchData() {\n            // You can await here\n            const result = await axios(\n                apiURL,\n            );\n            const { balance, income, income_date, expense } = result.data.results[0];\n            setBalance(balance);\n            setIncome(income);\n            setIncomeDate(income_date);\n            setExpense(expense);\n        }\n\n        fetchData();\n\n    }, []);\n\n    // set expense\n    useEffect(() => {\n        let expenseTypes = expense.map((val, i, arr) => {\n            let expenseSingle = val;\n            let expenseSingleValue = val[1];\n            let expenseSingleType = val[2];\n            let res = {name: '', amount: 0};\n            for (let j = 0; j < expense.length; j++) {\n                // console.log(expenseSingleType, expense[j][2]);\n                \n                if (expenseSingleType === expense[j][2]) {\n                    console.log(expenseSingleType);\n                    res.name = expenseSingleType;\n                    res.amount += Number(expense[j][1]);\n                }\n            }\n            return res;\n            \n            \n        })\n        let summary = _.uniqWith(expenseTypes, _.isEqual);\n        setSummary(summary);\n        setExpenseAmount(calculateExpenseAmount());\n    }, [expense]);\n\n    const updateDB = () => {\n        axios.put(`${apiURL}/0`, {\n            _id: 0,\n            name: 'admin',\n            balance: balance,\n            income: income,\n            income_date: incomeDate,\n            expense: expense\n          }, {headers: {\n            \"Content-type\": \"application/json\"\n        }})\n          .catch(function (error) {\n            console.log(error);\n          });\n    }\n\n    const handleIncome = (value) => {\n        setIncome(Number(income) + Number(value));\n        setIncomeDate(new Date().toLocaleDateString());\n        setBalance(balance + Number(value));\n    }\n\n    const handleIncomeRemove = (value) => {\n        setIncome(Number(income) - Number(value));\n        setBalance(balance - Number(value));\n    }\n\n    const handleExpense = (expenseName, expenseAmount, expenseType) => {\n        setExpense([\n            ...expense,\n            [expenseName, expenseAmount, expenseType.toLowerCase()]\n        ]);\n        setBalance(balance - Number(expenseAmount));\n    }\n\n    const calculateExpenseAmount = () => {\n        return expense.reduce((totalExpense, currentExpense) => {\n            return Number(totalExpense) + Number(currentExpense[1]);\n        }, 0);\n    }\n\n    const handleDeleteHistoryItem = (historyItemAmount, historyItemIndex) => {\n        let tempExpensesList = [...expense];\n        if (historyItemIndex !== -1) {\n            tempExpensesList.splice(historyItemIndex, 1);\n            setExpense(tempExpensesList);\n            setBalance(balance + historyItemAmount);\n        }\n    }\n\n    return (\n        <div className=\"tracker\">\n            <div className=\"tracker-panel\">\n                {/* TODO */}\n            </div>\n            <div className=\"tracker-panel\">\n                <TrackerDisplay \n                    balance={balance}\n                    income={income}\n                    incomeDate={incomeDate}\n                    expenseAmount={calculateExpenseAmount()}\n                />\n\n                <TrackerHistory \n                    expense={expense}\n                    handleDeleteHistoryItem={handleDeleteHistoryItem}\n                />\n                \n                <TrackerAddTransaction\n                    income={income}\n                    handleIncome={handleIncome}\n                    handleExpense={handleExpense}\n                    handleIncomeRemove={handleIncomeRemove}\n                    updateDB={updateDB}\n                />\n            </div>\n            <div className=\"tracker-panel\">\n                <TrackerSummary\n                    summary={summary}\n                    totalExpenses={expenseAmount}\n                />\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport './scss/main.scss';\n\nimport About from './components/About/About';\nimport Tracker from './components/Tracker/Tracker';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"container-fluid\">\n\t\t\t<Router basename=\"finance-tracker\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"header\">\n\t\t\t\t\t\t<nav className=\"navigation\">\n\t\t\t\t\t\t\t<Link to=\"/\" className=\"navigation__link\">Home</Link>\n\t\t\t\t\t\t\t<Link to=\"/about\" className=\"navigation__link\">About</Link>\n\t\t\t\t\t\t</nav>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Tracker}></Route>\n\t\t\t\t\t<Route path=\"/about\" component={About}></Route>\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\t\nexport default App;\n\t","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}